datasource postgres {
  provider = "postgresql"
  url      = "postgresql://postgres:docker@localhost:5432"
}

generator photonjs {
  provider = "photonjs"

}

model CFPackage {
  id  String @default(cuid()) @id
  CFDocument CFPckgDocument
  CFItems CFPckgItem[]
  CFAssociations CFPckgAssociation[]
  CFDefinitions CFDefinition[]
  CFRubrics CFRubric[]
}

model CFDefinition {
  id  String @default(cuid()) @id
  CFConcepts CFConcept[]
  CFSubjects CFSubject[]
  CFLicenses CFLicense[]
  CFItemTypes CFItemType[]
  CFAssociationGroupings CFAssociationGrouping[]
}

model CFConcept {
  id  String @default(cuid()) @id
  identifier String
  title String
  uri String
  keywords String?
  description String?
  hierarchyCode String
  lastChangeDateTime DateTime
}

model CFConceptSet {
  id  String @default(cuid()) @id
  CFConcepts CFConcept[]
}

model CFSubject {
  id  String @default(cuid()) @id
  identifier String
  title String
  uri String
  description String?
  hierarchyCode String
  lastChangeDateTime DateTime
}

model CFsubjectSet {
  id  String @default(cuid()) @id
  CFSubjects CFSubject[]
}

model CFLicense {
  id  String @default(cuid()) @id
  identifier String
  title String
  uri String
  keywords String
  description String?
  licenseText String
  lastChangeDateTime DateTime
}

model CFItemType {
  id  String @default(cuid()) @id
  identifier String
  title String
  uri String
  description String
  hierarchyCode String
  typeCode String?
  lastChangeDateTime DateTime
}

model CFItemTypeSet {
  id  String @default(cuid()) @id
  CFItemTypes CFItemType[]
}

model CFAssociationGrouping {
  id  String @default(cuid()) @id
  identifier String
  title String
  uri String
  description String?
  lastChangeDateTime DateTime
}

model CFDocument {
  id  String @default(cuid()) @id
  identifier String
  uri String
  creator String
  title String
  lastChangeDateTime DateTime
  CFPackageURI LinkURI @relation(name: "CFPackageURItoLinkURI")
  officialSourceURL String?
  publisher String?
  description String?
  subject String[]
  subjectURI LinkURI[] @relation(name: "subjectURItoLinkURI")
  language String?
  version String?
  adoptionStatus String?
  statusStartDate DateTime?
  statusEndDate DateTime?
  licenseURI LinkURI?
  notes String?
}

model CFPckgDocument {
   id  String @default(cuid()) @id
   identifier String
  title String
  creator String
  uri String
  lastChangeDateTime DateTime
  officialSourceURL String?
  publisher String?
  description String?
  subject String[]
  subjectURI LinkURI[] @relation(name: "CFPckgDocumentsubjectURItoLinkURI")
  language String?
  version String?
  adoptionStatus String?
  statusStartDate DateTime?
  statusEndDate DateTime?
  licenseURI LinkURI?
  notes String?
}

model CFDocumentSet {
  id  String @default(cuid()) @id
  CFDocuments CFDocument[]
}

model CFItem {
  id  String @default(cuid()) @id
  identifier String
  uri String
  fullStatement String
  alternativeLabel String?
  CFItemType String?
  CFItemTypeURI LinkURI @relation(name: "CFItemTypeURItoLinkURI")
  humanCodingScheme String?
  listEnumeration String?
  abbreviatedStatement String?
  conceptKeywords String[]
  conceptKeywordsURI LinkURI @relation(name: "conceptKeywordsURItoLinkURI")
  notes String?
  language String?
  educationLevel String[]
  statusStartDate DateTime?
  statusEndDate DateTime?
  licenseURI LinkURI @relation(name: "licenseURItoLinkURI")
  lastChangeDateTime DateTime
  CFDocumentURI LinkURI
}

model CFPckgItem {
  id  String @default(cuid()) @id
  identifier String
  uri String
  fullStatement String
  alternativeLabel String?
  CFItemType String?
  CFItemTypeURI LinkURI @relation(name: "CFPckgItemCFItemTypeURItoLinkURI")
  humanCodingScheme String?
  listEnumeration String?
  abbreviatedStatement String?
  conceptKeywords String[]
  conceptKeywordsURI LinkURI @relation(name: "CFPckgItemconceptKeywordsURItoLinkURI")
  notes String?
  language String?
  educationLevel String[]
  statusStartDate DateTime?
  statusEndDate DateTime?
  licenseURI LinkURI @relation(name: "CFPckgItemlicenseURItoLinkURI")
  lastChangeDateTime DateTime
}

model LinkURI {
  id  String @default(cuid()) @id
  identifier String
  title String
  uri String
  CFAssociationtoLinkURI CFAssociation @relation(name: "CFAssociationtoLinkURI")
  CFPckgAssociationtoLinkURI CFPckgAssociation @relation(name: "CFPckgAssociationtoLinkURI")
  CFPackageURItoLinkURI CFDocument @relation(name: "CFPackageURItoLinkURI")
  subjectURItoLinkURI CFDocument @relation(name: "subjectURItoLinkURI")
  conceptKeywordsURItoLinkURI CFItem @relation(name: "conceptKeywordsURItoLinkURI")
  CFItemTypeURItoLinkURI CFItem @relation(name: "CFItemTypeURItoLinkURI")
  licenseURItoLinkURI CFItem @relation(name: "licenseURItoLinkURI")
  CFPckgItemCFItemTypeURItoLinkURI CFPckgItem @relation(name: "CFPckgItemCFItemTypeURItoLinkURI")
  CFPckgItemconceptKeywordsURItoLinkURI CFPckgItem @relation(name: "CFPckgItemconceptKeywordsURItoLinkURI")
  CFPckgItemlicenseURItoLinkURI CFPckgItem @relation(name: "CFPckgItemlicenseURItoLinkURI")
  CFPckgDocumentsubjectURItoLinkURI CFPckgDocument @relation(name: "CFPckgDocumentsubjectURItoLinkURI")
}

model CFAssociation {
  id  String @default(cuid()) @id
  identifier String
  uri String
  CFDocumentURI LinkURI
  associationType CFAssociationTypeEnum
  sequenceNumber Int?
  originNodeURI LinkGenURI
  destinationNodeURI LinkGenURI @relation(name: "destinationNodeURItoLinkGenURI")
  CFAssociationGroupingURI LinkURI? @relation(name: "CFAssociationtoLinkURI")
  lastChangeDateTime DateTime
}

model CFAssociationSet {
  id  String @default(cuid()) @id
  CFItem CFItem
  CFAssociations CFPckgAssociation[]
}

model CFPckgAssociation {
  id  String @default(cuid()) @id
  identifier String
  associationType CFAssociationTypeEnum[]
  sequenceNumber Int?
  uri String
  originNodeURI LinkGenURI
  destinationNodeURI LinkGenURI @relation(name: "CFPckgAssociationtoLinkGenURI")
  CFAssociationGroupingURI LinkURI? @relation(name: "CFPckgAssociationtoLinkURI")
  lastChangeDateTime DateTime
}

model CFRubric {
  id  String @default(cuid()) @id
  identifier String
  title String?
  uri String
  description String?
  lastChangeDateTime DateTime
  CFRubricCriteria CFRubricCriterion[]
}

model CFRubricCriterion {
  id  String @default(cuid()) @id
  identifier String
  category String?
  uri String
  description String?
  CFItemURI LinkURI?
  weight Int?
  position Int?
  rubricId String?
  lastChangeDateTime DateTime
  CFRubricCriterionLevels CFRubricCriterionLevel[]
}

model CFRubricCriterionLevel {
  id  String @default(cuid()) @id
  identifier String
  quality String?
  uri String
  description String?
  score Int?
  feedback String?
  position Int?
  rubricCriterionId String?
  lastChangeDateTime DateTime
}

model LinkGenURI {
  id  String @default(cuid()) @id
  identifier String
  title String
  uri String
  destinationNodeURItoCFAssociation CFAssociation @relation(name: "destinationNodeURItoLinkGenURI")
  destinationNodeURItoCFPckgAssociation CFPckgAssociation @relation(name: "CFPckgAssociationtoLinkGenURI")
}

enum CFAssociationTypeEnum {
  isChildOf
  isPeerOf
  isPartOf
  exactMatchOf
  precedes
  isRelatedTo
  replacedBy
  exemplar
  hasSkillLevel
}